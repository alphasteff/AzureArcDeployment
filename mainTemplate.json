// Storage Account mit Container
{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "enterpriseScaleCompanyPrefix": {
            "type": "string",
            "maxLength": 10,
            "metadata": {
                "description": "Provide a prefix (max 10 characters, unique at tenant-scope) for the resources created as part of Azure Arc deployment."
            }
        },
        "createStorageAccount": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "rgNameStorageAccount": {
            "type": "string",
            "defaultValue": "'rsgr-mglz-azurepolicyguestconfig-01')]",
            "metadata": {
                "description": "Provide the name of the resource group for the Storage Account for Azure Policy Guest Configuration."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "'azurepolicyguestconfig')]",
            "metadata": {
                "description": "Provide the name of the Storage Account for Azure Policy Guest Configuration."
            }
        },
        "subscriptionIdAzurePolicyGuestConfig": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription ID of an existing subscription in which the resource group and resources for the Storage Account for Azure Policy Guest Configuration should be created."
            }
        },
        "locationAzurePolicyGuestConfig": {
            "type": "string",
            "defaultValue": "[deployment().location]",
            "metadata": {
                "description": "Provide the location in which the resource group and resources for the Storage Account for Azure Policy Guest Configuration should be created."
            }
        },
        "tagsAzurePolicyGuestConfig": {
            "type": "object",
            "defaultValue": {}
        },
        "createTier0": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "rgNameTier0": {
            "type": "string",
            "defaultValue": "'rsgr-idlz-arctier0-01')]",
            "metadata": {
                "description": "Provide the name of the resource group for Tier 0."
            }
        },
        "subscriptionIdTier0": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription ID of an existing subscription in which the resource group for Tier 0 should be created."
            }
        },
        "locationTier0": {
            "type": "string",
            "defaultValue": "[deployment().location]",
            "metadata": {
                "description": "Provide the location in which the resource group for Tier 0 should be created."
            }
        },
        "tagsTier0": {
            "type": "object",
            "defaultValue": "[createObject()]"
        },
        "createTier1": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "rgNameTier1": {
            "type": "string",
            "defaultValue": "'rsgr-aplz-arctier1-01')]",
            "metadata": {
                "description": "Provide the name of the resource group for Tier 1."
            }
        },
        "subscriptionIdTier1": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription ID of an existing subscription in which the resource group for Tier 1 should be created."
            }
        },
        "locationTier1": {
            "type": "string",
            "defaultValue": "[deployment().location]",
            "metadata": {
                "description": "Provide the location in which the resource group for Tier 1 should be created."
            }
        },
        "tagsTier1": {
            "type": "object",
            "defaultValue": "[createObject()]"
        },
        "createTier2": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "Yes"
        },
        "rgNameTier2": {
            "type": "string",
            "defaultValue": "'rsgr-aplz-arctier2-01')]",
            "metadata": {
                "description": "Provide the name of the resource group for Tier 2."
            }
        },
        "subscriptionIdTier2": {
            "type": "string",
            "defaultValue": "",
            "maxLength": 36,
            "metadata": {
                "description": "Provide the subscription ID of an existing subscription in which the resource group for Tier 2 should be created."
            }
        },
        "locationTier2": {
            "type": "string",
            "defaultValue": "[deployment().location]",
            "metadata": {
                "description": "Provide the location in which the resource group for Tier 2 should be created."
            }
        },
        "tagsTier2": {
            "type": "object",
            "defaultValue": "[createObject()]"
        },
        "currentDateTimeUtcNow": {
            "type": "string",
            "defaultValue": "[utcNow()]",
            "metadata": {
                "description": "The current date and time using the utcNow function. Used for deployment name uniqueness"
            }
        }
    },
    "variables": {
        // Declaring all required deployment uri's used for deployments of composite ARM templates
        "deploymentUris": {
            "resourceGroup": "[uri(deployment().properties.templateLink.uri, 'https://raw.githubusercontent.com/alphasteff/AzureArcDeployment/main/subscriptionTemplates/resourceGroup.json')]",
            "storageAccount": "[uri(deployment().properties.templateLink.uri, 'https://raw.githubusercontent.com/alphasteff/AzureArcDeployment/main/subscriptionTemplates/storageAccount.json')]"
        },
        // Declaring deterministic deployment names
        "deploymentSuffix": "[concat('-', deployment().location, '-', guid(parameters('enterpriseScaleCompanyPrefix'), parameters('currentDateTimeUtcNow')))]",
        "deploymentNames": {
            "azureSAPolicyGuestConfig": "[take(concat('arc-res-azPolGuestConf', variables('deploymentSuffix')), 64)]",
            "azureRgPolicyGuestConfig": "[take(concat('arc-rg-azPolGuestConf', variables('deploymentSuffix')), 64)]",
            "tier0RgDeploymentName": "[take(concat('arc-rg-tier0', variables('deploymentSuffix')), 64)]",
            "tier1RgDeploymentName": "[take(concat('arc-rg-tier1', variables('deploymentSuffix')), 64)]",
            "tier2RgDeploymentName": "[take(concat('arc-rg-tier2', variables('deploymentSuffix')), 64)]"
        },
        "storageAccountNameAzurePolicyGuestConfig" : "[toLower(concat(parameters('enterpriseScaleCompanyPrefix'), parameters('storageAccountName'), uniqueString(parameters('enterpriseScaleCompanyPrefix'))))]",
        "platformResourceIds": {
            "resourceIdRgPolicyGuestConfig": "[concat('/subscriptions/', parameters('rgNameStorageAccount'), '/resourceGroups/', parameters('rgNameStorageAccount'))]"
        }
    },
    "resources": [
      {
        // Creating resource group for AzurePolicyGuestConfig
        "condition": "[and(not(empty(parameters('createStorageAccount'))), not(empty(parameters('rgNameStorageAccount'))), not(empty(parameters('subscriptionIdAzurePolicyGuestConfig'))))]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "[variables('deploymentNames').azureRgPolicyGuestConfig]",
        "subscriptionId": "[parameters('subscriptionIdAzurePolicyGuestConfig')]",
        "location": "[deployment().location]",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "contentVersion": "1.0.0.0",
                "uri": "[variables('deploymentUris').resourceGroup]"
            },
            "parameters": {
                "rgName": {
                    "value": "[parameters('rgNameStorageAccount')]"
                },
                "location": {
                    "value": "[parameters('locationAzurePolicyGuestConfig')]"
                }
            }
        }
      },
      {
        // Creating storage account for AzurePolicyGuestConfig
        "condition": "[and(not(empty(parameters('createStorageAccount'))), not(empty(parameters('rgNameStorageAccount'))), not(empty(parameters('subscriptionIdAzurePolicyGuestConfig'))))]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "[variables('deploymentNames').azureSAPolicyGuestConfig]",
        "subscriptionId": "[parameters('subscriptionIdAzurePolicyGuestConfig')]",
        "resourceGroup": "[parameters('rgNameStorageAccount')]",
        "dependsOn": [
            "[resourceId('Microsoft.Resources/deployments', variables('deploymentNames').azureRgPolicyGuestConfig)]"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "contentVersion": "1.0.0.0",
                "uri": "[variables('deploymentUris').storageAccount]"
            },
            "parameters": {
                "storageAccountName": {
                    "value": "[variables('storageAccountNameAzurePolicyGuestConfig')]"
                },
                "location": {
                    "value": "[parameters('locationAzurePolicyGuestConfig')]"
                },
                "tags": {
                    "value": "[ if(contains(parameters('tagsAzurePolicyGuestConfig'), 'Microsoft.Storage/storageAccounts'), parameters('tagsAzurePolicyGuestConfig')['Microsoft.Storage/storageAccounts'], json('{}')) ]"
                }
            }
        }
      },
      {
        // Creating resource group for Tier 0
        "condition": "[and(not(empty(parameters('createTier0'))), not(empty(parameters('rgNameTier0'))), not(empty(parameters('subscriptionIdTier0'))))]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "[variables('deploymentNames').tier0RgDeploymentName]",
        "subscriptionId": "[parameters('subscriptionIdTier0')]",
        "location": "[deployment().location]",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "contentVersion": "1.0.0.0",
                "uri": "[variables('deploymentUris').resourceGroup]"
            },
            "parameters": {
                "rgName": {
                    "value": "[parameters('rgNameTier0')]"
                },
                "location": {
                    "value": "[parameters('locationTier0')]"
                },
                "tags": {
                    "value": "[parameters('tagsTier0')]"
                }
            }
        }
      },
      {
        // Creating resource group for Tier 1
        "condition": "[and(not(empty(parameters('createTier1'))), not(empty(parameters('rgNameTier1'))), not(empty(parameters('subscriptionIdTier1'))))]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "[variables('deploymentNames').tier1RgDeploymentName]",
        "subscriptionId": "[parameters('subscriptionIdTier1')]",
        "location": "[deployment().location]",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "contentVersion": "1.0.0.0",
                "uri": "[variables('deploymentUris').resourceGroup]"
            },
            "parameters": {
                "rgName": {
                    "value": "[parameters('rgNameTier1')]"
                },
                "location": {
                    "value": "[parameters('locationTier1')]"
                },
                "tags": {
                    "value": "[parameters('tagsTier1')]"
                }
            }
        }
      },
      {
        // Creating resource group for Tier 2
        "condition": "[and(not(empty(parameters('createTier2'))), not(empty(parameters('rgNameTier2'))), not(empty(parameters('subscriptionIdTier2'))))]",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2020-10-01",
        "name": "[variables('deploymentNames').tier2RgDeploymentName]",
        "subscriptionId": "[parameters('subscriptionIdTier2')]",
        "location": "[deployment().location]",
        "properties": {
            "mode": "Incremental",
            "templateLink": {
                "contentVersion": "1.0.0.0",
                "uri": "[variables('deploymentUris').resourceGroup]"
            },
            "parameters": {
                "rgName": {
                    "value": "[parameters('rgNameTier2')]"
                },
                "location": {
                    "value": "[parameters('locationTier2')]"
                },
                "tags": {
                    "value": "[parameters('tagsTier2')]"
                }
            }
        }
      }
    ],
    "outputs": {
    }
}